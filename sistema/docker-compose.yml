version: '3.8'

services:
  db:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: myappdb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - db_net

  auth-service:
    build: ./auth-service
    container_name: auth_service
    restart: always
    env_file:
      - ./backend/.env
    command: ["gunicorn", "--bind", "0.0.0.0:5001", "run:app"]
    ports:
      - "5001:5001"
    networks:
      - db_net
      - backend_net
    depends_on:
      - db

  backend:
    build: ./backend
    container_name: flask_backend
    restart: always
    env_file:
      - ./backend/.env
    environment:
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
      - ./backend/migrations:/app/migrations
    ports:
      - "5000:5000"
    networks:
      - db_net
      - backend_net
    depends_on:
      - db

  gateway:
    build: ./api-gateway          # shorthand: contexto de build Ã© essa pasta
    container_name: api_gateway
    restart: always
    ports:
      - "5002:5002"
    environment:
      AUTH_SERVICE_URL: "http://auth-service:5001"
      BACKEND_SERVICE_URL: "https://backend:5000"
      SSL_CERT_PATH: "/app/certs/cert.pem"
      SSL_KEY_PATH: "/app/certs/key.pem"
    networks:
      - backend_net
      - frontend_net
    depends_on:
      - auth-service
      - backend

  frontend:
    build: ./frontend
    container_name: vue_frontend
    restart: always
    env_file:
      - ./frontend/.env
    ports:
      - "3000:80"
      - "3443:443"
    networks:
      - frontend_net
      - backend_net
    depends_on:
      - gateway
      - backend

volumes:
  mysql_data:

networks:
  db_net:
  backend_net:
  frontend_net:
